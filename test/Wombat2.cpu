<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE Machine [
<!ELEMENT Machine (PunctChar*, Field*, FileChannel*, Register*, RegisterArray*, ConditionBit*, RAM*, Set*, Test*, Increment*, Shift*, Logical*, Arithmetic*, Branch*, TransferRtoR*, TransferRtoA*, TransferAtoR*, Decode*, SetCondBit*, IO*, MemoryAccess*, End, Comment*, EQU*, FetchSequence, MachineInstruction*, HighlightingInfo?, LoadingInfo?, IndexingInfo?, ModuleWindowsInfo?) >
<!ATTLIST Machine name CDATA "unnamed">
<!ELEMENT PunctChar EMPTY>
<!ATTLIST PunctChar char CDATA #REQUIRED use  (symbol|token|label|comment|pseudo|illegal) #REQUIRED>
<!ELEMENT Field (FieldValue*)>
<!ATTLIST Field name CDATA #REQUIRED type  (required|optional|ignored) #REQUIRED numBits CDATA #REQUIRED relativity (absolute|pcRelativePreIncr|pcRelativePostIncr) #REQUIRED defaultValue CDATA #REQUIRED signed (true|false) #REQUIRED id ID #REQUIRED>
<!ELEMENT FieldValue EMPTY>
<!ATTLIST FieldValue name CDATA #REQUIRED value CDATA #REQUIRED>
<!ELEMENT FileChannel EMPTY>
<!ATTLIST FileChannel file CDATA #REQUIRED id CDATA #REQUIRED>
<!ELEMENT Register EMPTY>
<!ATTLIST Register name CDATA #REQUIRED width CDATA #REQUIRED initialValue CDATA #REQUIRED readOnly (true|false) "false" id ID #REQUIRED>
<!ELEMENT RegisterArray (Register+)>
<!ATTLIST RegisterArray name CDATA #REQUIRED width CDATA #REQUIRED length CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT ConditionBit EMPTY>
<!ATTLIST ConditionBit name CDATA #REQUIRED bit CDATA #REQUIRED register IDREF #REQUIRED halt (true|false) "false" id ID #REQUIRED>
<!ELEMENT RAM EMPTY>
<!ATTLIST RAM name CDATA #REQUIRED length CDATA #REQUIRED id ID #REQUIRED cellSize CDATA "8">
<!ELEMENT Increment EMPTY>
<!ATTLIST Increment name CDATA #REQUIRED register IDREF #REQUIRED overflowBit IDREF #IMPLIED delta CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Arithmetic EMPTY>
<!ATTLIST Arithmetic name CDATA #REQUIRED type (ADD|SUBTRACT|MULTIPLY|DIVIDE) #REQUIRED source1 IDREF #REQUIRED source2 IDREF #REQUIRED destination IDREF #REQUIRED overflowBit IDREF #IMPLIED  carryBit IDREF #IMPLIED  id ID #REQUIRED>
<!ELEMENT TransferRtoR EMPTY>
<!ATTLIST TransferRtoR name CDATA #REQUIRED source IDREF #REQUIRED srcStartBit CDATA #REQUIRED dest IDREF #REQUIRED destStartBit CDATA #REQUIRED numBits CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT TransferRtoA EMPTY>
<!ATTLIST TransferRtoA name CDATA #REQUIRED source IDREF #REQUIRED srcStartBit CDATA #REQUIRED dest IDREF #REQUIRED destStartBit CDATA #REQUIRED numBits CDATA #REQUIRED index IDREF #REQUIRED indexStart CDATA #IMPLIED indexNumBits CDATA #IMPLIED id ID #REQUIRED>
<!ELEMENT TransferAtoR EMPTY>
<!ATTLIST TransferAtoR name CDATA #REQUIRED source IDREF #REQUIRED srcStartBit CDATA #REQUIRED dest IDREF #REQUIRED destStartBit CDATA #REQUIRED numBits CDATA #REQUIRED index IDREF #REQUIRED indexStart CDATA #IMPLIED indexNumBits CDATA #IMPLIED id ID #REQUIRED>
<!ELEMENT Shift EMPTY>
<!ATTLIST Shift name CDATA #REQUIRED source IDREF #REQUIRED destination IDREF #REQUIRED type (logical | arithmetic | cyclic) #REQUIRED direction (right | left) #REQUIRED distance CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Branch EMPTY>
<!ATTLIST Branch name CDATA #REQUIRED amount CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Logical EMPTY>
<!ATTLIST Logical name CDATA #REQUIRED source1 IDREF #REQUIRED source2 IDREF #REQUIRED destination IDREF #REQUIRED type (AND | OR | NAND | NOR | XOR | NOT) #REQUIRED id ID #REQUIRED>
<!ELEMENT Set EMPTY>
<!ATTLIST Set name CDATA #REQUIRED register IDREF #REQUIRED start CDATA #REQUIRED numBits CDATA #REQUIRED value CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Test EMPTY >
<!ATTLIST Test name CDATA #REQUIRED register IDREF #REQUIRED start CDATA #REQUIRED numBits CDATA #REQUIRED comparison (EQ | NE | LT | GT | LE | GE ) #REQUIRED value CDATA #REQUIRED omission CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Decode EMPTY >
<!ATTLIST Decode name CDATA #REQUIRED ir IDREF #REQUIRED id ID #REQUIRED>
<!ELEMENT IO EMPTY >
<!ATTLIST IO name CDATA #REQUIRED direction (input | output) #REQUIRED type (integer | ascii | unicode) #REQUIRED buffer IDREF #REQUIRED connection CDATA #IMPLIED id ID #REQUIRED>
<!ELEMENT MemoryAccess EMPTY >
<!ATTLIST MemoryAccess name CDATA #REQUIRED direction (read | write ) #REQUIRED memory IDREF #REQUIRED data IDREF #REQUIRED address IDREF #REQUIRED id ID #REQUIRED>
<!ELEMENT SetCondBit EMPTY >
<!ATTLIST SetCondBit name CDATA #REQUIRED bit IDREF #REQUIRED value (0 | 1) #REQUIRED id ID #REQUIRED>
<!ELEMENT End EMPTY>
<!ATTLIST End id ID #REQUIRED>
<!ELEMENT Comment EMPTY>
<!ATTLIST Comment name CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Microinstruction EMPTY>
<!ATTLIST Microinstruction microRef IDREF #REQUIRED>
<!ELEMENT MachineInstruction (Microinstruction*)>
<!ATTLIST MachineInstruction name CDATA #REQUIRED opcode CDATA #REQUIRED instructionFormat CDATA #REQUIRED assemblyFormat CDATA #REQUIRED instructionColors CDATA #REQUIRED assemblyColors CDATA #REQUIRED>
<!ELEMENT FetchSequence (Microinstruction*) >
<!ELEMENT EQU EMPTY>
<!ATTLIST EQU name CDATA #REQUIRED value CDATA #REQUIRED>
<!ELEMENT HighlightingInfo (RegisterRAMPair*)>
<!ELEMENT RegisterRAMPair EMPTY>
<!ATTLIST RegisterRAMPair register IDREF #REQUIRED ram IDREF #REQUIRED dynamic (true|false) #REQUIRED>
<!ELEMENT LoadingInfo EMPTY>
<!ATTLIST LoadingInfo ram IDREF #IMPLIED startingAddress CDATA "0">
<!ELEMENT IndexingInfo EMPTY>
<!ATTLIST IndexingInfo indexFromRight CDATA "false">
<!ELEMENT ModuleWindowsInfo ((RegisterWindowInfo | RegisterArrayWindowInfo | RAMWindowInfo)*) >
<!ELEMENT RegisterWindowInfo EMPTY>
<!ATTLIST RegisterWindowInfo top CDATA "50" left CDATA "50" width CDATA "300" height CDATA "150" base (Decimal|Binary|Hexadecimal|Ascii|UnsignedDec|Unicode)  "Decimal">
<!ELEMENT RegisterArrayWindowInfo EMPTY>
<!ATTLIST RegisterArrayWindowInfo array IDREF #REQUIRED top CDATA "50" left CDATA "50" width CDATA "300" height CDATA "150" base (Decimal|Binary|Hexadecimal|Ascii|UnsignedDec|Unicode) "Decimal">
<!ELEMENT RAMWindowInfo EMPTY>
<!ATTLIST RAMWindowInfo ram IDREF #REQUIRED cellSize CDATA "1" top CDATA "50" left CDATA "50" width CDATA "450" height CDATA "450" contentsbase (Decimal|Binary|Hexadecimal|Ascii|UnsignedDec|Unicode) "Decimal" addressbase (Decimal|Binary|Hexadecimal) "Decimal">
]>

<Machine name="Wombat2.cpu" >
	<!--............. Punctuation Options .............-->
	<PunctChar char="!" use="symbol" />
	<PunctChar char="#" use="symbol" />
	<PunctChar char="$" use="symbol" />
	<PunctChar char="%" use="symbol" />
	<PunctChar char="&amp;" use="symbol" />
	<PunctChar char="^" use="symbol" />
	<PunctChar char="_" use="symbol" />
	<PunctChar char="`" use="symbol" />
	<PunctChar char="*" use="symbol" />
	<PunctChar char="?" use="symbol" />
	<PunctChar char="@" use="symbol" />
	<PunctChar char="~" use="symbol" />
	<PunctChar char="+" use="symbol" />
	<PunctChar char="-" use="symbol" />
	<PunctChar char="(" use="token" />
	<PunctChar char=")" use="token" />
	<PunctChar char="," use="token" />
	<PunctChar char="/" use="token" />
	<PunctChar char="=" use="token" />
	<PunctChar char="[" use="token" />
	<PunctChar char="\" use="token" />
	<PunctChar char="]" use="token" />
	<PunctChar char="{" use="token" />
	<PunctChar char="|" use="token" />
	<PunctChar char="}" use="token" />
	<PunctChar char="." use="pseudo" />
	<PunctChar char=":" use="label" />
	<PunctChar char=";" use="comment" />

	<!--......... machine instruction fields ............-->
	<Field name="sgn5" type="required" numBits="8" relativity="absolute" signed="true" defaultValue="0" id="Field2bd30e0">
	</Field>
	<Field name="reg" type="required" numBits="3" relativity="absolute" signed="false" defaultValue="0" id="Field18db07a1">
	</Field>
	<Field name="un3" type="ignored" numBits="3" relativity="absolute" signed="true" defaultValue="0" id="Field9d5aee6">
	</Field>
	<Field name="op" type="required" numBits="5" relativity="absolute" signed="false" defaultValue="0" id="Field559b893b">
	</Field>
	<Field name="un5" type="ignored" numBits="5" relativity="absolute" signed="true" defaultValue="0" id="Field3e4a8958">
	</Field>
	<Field name="addr" type="required" numBits="8" relativity="absolute" signed="false" defaultValue="0" id="Field7eec773f">
	</Field>
	<Field name="un8" type="ignored" numBits="8" relativity="absolute" signed="true" defaultValue="0" id="Field5a6a549a">
	</Field>
	<Field name="un11" type="ignored" numBits="11" relativity="absolute" signed="true" defaultValue="0" id="Field39db8fca">
	</Field>

	<!--............. FileChannels .................-->
	<!-- none -->

	<!--............. registers .....................-->
	<Register name="buffer1" width="16" initialValue="0" readOnly="false" id="module.Register2c550cdd" />
	<Register name="buffer2" width="16" initialValue="0" readOnly="false" id="module.Register71dc69ce" />
	<Register name="ir" width="16" initialValue="0" readOnly="false" id="module.Register141c1de0" />
	<Register name="mar" width="12" initialValue="0" readOnly="false" id="module.Register2aa35468" />
	<Register name="mdr" width="16" initialValue="0" readOnly="false" id="module.Register2e949605" />
	<Register name="pc" width="12" initialValue="0" readOnly="false" id="module.Register3c940800" />
	<Register name="status" width="3" initialValue="0" readOnly="false" id="module.Register4893e16f" />

	<!--............. register arrays ...............-->
	<RegisterArray name="A" length="8" width="16" id="module.RegisterArray7823ec01" >
		<Register name="A[0]" width="16" initialValue="0" readOnly="false" id="module.Register720d79be" />
		<Register name="A[1]" width="16" initialValue="0" readOnly="false" id="module.Register6e45abf7" />
		<Register name="A[2]" width="16" initialValue="0" readOnly="false" id="module.Register398ab7c9" />
		<Register name="A[3]" width="16" initialValue="0" readOnly="false" id="module.Register5eae071d" />
		<Register name="A[4]" width="16" initialValue="0" readOnly="false" id="module.Register477755ff" />
		<Register name="A[5]" width="16" initialValue="0" readOnly="false" id="module.Register4ae44f5" />
		<Register name="A[6]" width="16" initialValue="0" readOnly="false" id="module.Register68768f56" />
		<Register name="A[7]" width="16" initialValue="0" readOnly="false" id="module.Register464eebaa" />
	</RegisterArray>

	<!--............. condition bits ................-->
	<ConditionBit name="halt" bit="0" register="module.Register4893e16f" halt="true" id="module.ConditionBit3beb9631" />

	<!--............. rams ..........................-->
	<RAM name="Main" length="256" cellSize="8" id="module.RAM4d14f455" />

	<!--............. set ...........................-->
	<Set name="clear-buf1" register="module.Register2c550cdd" start="0" numBits="16" value="0" id="microinstruction.CpusimSet1144ce9e" />
	<Set name="clear-mar" register="module.Register2aa35468" start="0" numBits="12" value="0" id="microinstruction.CpusimSet206664a7" />
	<Set name="clear-pc" register="module.Register3c940800" start="0" numBits="12" value="0" id="microinstruction.CpusimSet475b2484" />

	<!--............. test ..........................-->
	<Test name="if(buf1!=0)skip-2" register="module.Register2c550cdd" start="0" numBits="16" comparison="NE" value="0" omission="2" id="microinstruction.Test2d07c666" />
	<Test name="if(buf1&gt;=0)skip-2" register="module.Register2c550cdd" start="0" numBits="16" comparison="GE" value="0" omission="2" id="microinstruction.Test1a00dd66" />
	<Test name="if(mar=IO)skip3" register="module.Register2aa35468" start="0" numBits="12" comparison="EQ" value="254" omission="3" id="microinstruction.Test950d1dd" />
	<Test name="if(mar=IO)skip4" register="module.Register2aa35468" start="0" numBits="12" comparison="EQ" value="254" omission="4" id="microinstruction.Test17b1bb77" />

	<!--............. increment .....................-->
	<Increment name="Inc2-pc" register="module.Register3c940800" overflowBit="module.ConditionBit3beb9631" delta="2" id="microinstruction.Increment4167b11" />

	<!--............. shift .........................-->
	<Shift name="rsa8buf1" type="arithmetic" source="module.Register2c550cdd" destination="module.Register2c550cdd" direction="right" distance="8" id="microinstruction.Shift18616d18" />

	<!--............. logical .......................-->
	<!-- none -->

	<!--............. arithmetic ....................-->
	<Arithmetic name="buf1*buf2-&gt;buf1" type="MULTIPLY" source1="module.Register2c550cdd" source2="module.Register71dc69ce" destination="module.Register2c550cdd" overflowBit="module.ConditionBit3beb9631" id="microinstruction.Arithmetic17b089f0" />
	<Arithmetic name="buf1+buf2-&gt;buf1" type="ADD" source1="module.Register2c550cdd" source2="module.Register71dc69ce" destination="module.Register2c550cdd" overflowBit="module.ConditionBit3beb9631" id="microinstruction.Arithmeticd40e272" />
	<Arithmetic name="buf1-buf2-&gt;buf1" type="SUBTRACT" source1="module.Register2c550cdd" source2="module.Register71dc69ce" destination="module.Register2c550cdd" overflowBit="module.ConditionBit3beb9631" id="microinstruction.Arithmetic3ab9ce38" />
	<Arithmetic name="buf1/buf2-&gt;buf1" type="DIVIDE" source1="module.Register2c550cdd" source2="module.Register71dc69ce" destination="module.Register2c550cdd" overflowBit="module.ConditionBit3beb9631" id="microinstruction.Arithmetic29a37dda" />

	<!--............. branch ........................-->
	<!-- none -->

	<!--............. transferRtoR ..................-->
	<TransferRtoR name="buffer1-&gt;mar" source="module.Register2c550cdd" srcStartBit="4" dest="module.Register2aa35468" destStartBit="0" numBits="12" id="microinstruction.TransferRtoR3acf9e17" />
	<TransferRtoR name="buffer1-&gt;mdr" source="module.Register2c550cdd" srcStartBit="0" dest="module.Register2e949605" destStartBit="0" numBits="16" id="microinstruction.TransferRtoR3016b84e" />
	<TransferRtoR name="ir(8-15)-&gt;buf1(0-7)" source="module.Register141c1de0" srcStartBit="8" dest="module.Register2c550cdd" destStartBit="0" numBits="8" id="microinstruction.TransferRtoR44aa687a" />
	<TransferRtoR name="ir(8-15)-&gt;mar" source="module.Register141c1de0" srcStartBit="8" dest="module.Register2aa35468" destStartBit="4" numBits="8" id="microinstruction.TransferRtoR76559098" />
	<TransferRtoR name="ir(8-15)-&gt;pc" source="module.Register141c1de0" srcStartBit="8" dest="module.Register3c940800" destStartBit="4" numBits="8" id="microinstruction.TransferRtoR302c8763" />
	<TransferRtoR name="mdr-&gt;buffer1" source="module.Register2e949605" srcStartBit="0" dest="module.Register2c550cdd" destStartBit="0" numBits="16" id="microinstruction.TransferRtoR35fd9de0" />
	<TransferRtoR name="mdr-&gt;ir" source="module.Register2e949605" srcStartBit="0" dest="module.Register141c1de0" destStartBit="0" numBits="16" id="microinstruction.TransferRtoR2283ca9d" />
	<TransferRtoR name="pc-&gt;mar" source="module.Register3c940800" srcStartBit="0" dest="module.Register2aa35468" destStartBit="0" numBits="12" id="microinstruction.TransferRtoR2ccbd8e8" />

	<!--............. transferRtoA ..................-->
	<TransferRtoA name="buf1-&gt;A[ir(5-7)]" source="module.Register2c550cdd" srcStartBit="0" dest="module.RegisterArray7823ec01" destStartBit="0" numBits="16" index="module.Register141c1de0" indexStart="5" indexNumBits="3" id="microinstruction.TransferRtoA7500520c" />
	<TransferRtoA name="buf1-&gt;A[ir(8-10)]" source="module.Register2c550cdd" srcStartBit="0" dest="module.RegisterArray7823ec01" destStartBit="0" numBits="16" index="module.Register141c1de0" indexStart="8" indexNumBits="3" id="microinstruction.TransferRtoA496bb913" />

	<!--............. transferAtoR ..................-->
	<TransferAtoR name="A[ir(5-7)]-&gt;buf1" source="module.RegisterArray7823ec01" srcStartBit="0" dest="module.Register2c550cdd" destStartBit="0" numBits="16" index="module.Register141c1de0" indexStart="5" indexNumBits="3" id="microinstruction.TransferAtoR7321b74c" />
	<TransferAtoR name="A[ir(8-10)]-&gt;buf1" source="module.RegisterArray7823ec01" srcStartBit="0" dest="module.Register2c550cdd" destStartBit="0" numBits="16" index="module.Register141c1de0" indexStart="8" indexNumBits="3" id="microinstruction.TransferAtoR15f2d58" />
	<TransferAtoR name="A[ir(8-10)]-&gt;buf2" source="module.RegisterArray7823ec01" srcStartBit="0" dest="module.Register71dc69ce" destStartBit="0" numBits="16" index="module.Register141c1de0" indexStart="8" indexNumBits="3" id="microinstruction.TransferAtoR76388f4d" />

	<!--............. decode ........................-->
	<Decode name="Decode-ir" ir="module.Register141c1de0" id="microinstruction.Decode628f13b8" />

	<!--............. set condition bit .............-->
	<SetCondBit name="set-halt-bit" bit="module.ConditionBit3beb9631" value="1" id="microinstruction.SetCondBit1c6a4372" />

	<!--............. io ............................-->
	<IO name="input-int-&gt;buf1" direction="input" type="integer" buffer="module.Register2c550cdd" connection="[Console]" id="microinstruction.IO64a7884a" />
	<IO name="output-buf1-&gt;int" direction="output" type="integer" buffer="module.Register2c550cdd" connection="[Console]" id="microinstruction.IO56d72174" />

	<!--............. memory access .................-->
	<MemoryAccess name="Main[mar]-&gt;mdr" direction="read" memory="module.RAM4d14f455" data="module.Register2e949605" address="module.Register2aa35468" id="microinstruction.MemoryAccess4c5feac5" />
	<MemoryAccess name="mdr-&gt;Main[mar]" direction="write" memory="module.RAM4d14f455" data="module.Register2e949605" address="module.Register2aa35468" id="microinstruction.MemoryAccess2e051ef" />

	<!--............. end ...........................-->
	<End id="microinstruction.End5a5d6c21" />

	<!--............. comment ...........................-->
	<Comment name="; comment one" id="microinstruction.Comment356e3a9f" />
	<Comment name="; comment two" id="microinstruction.Comment654e735" />

	<!--............. global equs ..................-->
	<EQU name="IO" value="254" />
	<EQU name="A7" value="7" />
	<EQU name="A6" value="6" />
	<EQU name="A5" value="5" />
	<EQU name="A4" value="4" />
	<EQU name="A3" value="3" />
	<EQU name="A2" value="2" />
	<EQU name="A1" value="1" />
	<EQU name="A0" value="0" />

	<!--............. fetch sequence ................-->
	<FetchSequence>
		<Microinstruction microRef="microinstruction.Comment356e3a9f" />
		<Microinstruction microRef="microinstruction.TransferRtoR2ccbd8e8" />
		<Microinstruction microRef="microinstruction.Comment654e735" />
		<Microinstruction microRef="microinstruction.MemoryAccess4c5feac5" />
		<Microinstruction microRef="microinstruction.TransferRtoR2283ca9d" />
		<Microinstruction microRef="microinstruction.Increment4167b11" />
		<Microinstruction microRef="microinstruction.Decode628f13b8" />
	</FetchSequence>

	<!--............. machine instructions ..........-->

	<MachineInstruction name="clear" opcode="e" instructionFormat="op reg un8" assemblyFormat="op reg" instructionColors="#b5eca0 #d8b39e #b6c089" assemblyColors="#b5eca0 #d8b39e" >
		<Microinstruction microRef="microinstruction.CpusimSet1144ce9e" />
		<Microinstruction microRef="microinstruction.TransferRtoA7500520c" />
		<Microinstruction microRef="microinstruction.End5a5d6c21" />
	</MachineInstruction>

	<MachineInstruction name="loadc" opcode="d" instructionFormat="op reg sgn5" assemblyFormat="op reg sgn5" instructionColors="#908fc9 #d1add1 #b7bfbe" assemblyColors="#908fc9 #d1add1 #b7bfbe" >
		<Microinstruction microRef="microinstruction.TransferRtoR44aa687a" />
		<Microinstruction microRef="microinstruction.Shift18616d18" />
		<Microinstruction microRef="microinstruction.TransferRtoA7500520c" />
		<Microinstruction microRef="microinstruction.End5a5d6c21" />
	</MachineInstruction>

	<MachineInstruction name="storei" opcode="c" instructionFormat="op reg reg un5" assemblyFormat="op reg reg" instructionColors="#9bd5f9 #8d86c7 #89edac #91f1a0" assemblyColors="#9bd5f9 #8d86c7 #89edac" >
		<Microinstruction microRef="microinstruction.TransferAtoR15f2d58" />
		<Microinstruction microRef="microinstruction.TransferRtoR3acf9e17" />
		<Microinstruction microRef="microinstruction.TransferAtoR7321b74c" />
		<Microinstruction microRef="microinstruction.Test950d1dd" />
		<Microinstruction microRef="microinstruction.TransferRtoR3016b84e" />
		<Microinstruction microRef="microinstruction.MemoryAccess2e051ef" />
		<Microinstruction microRef="microinstruction.End5a5d6c21" />
		<Microinstruction microRef="microinstruction.IO56d72174" />
		<Microinstruction microRef="microinstruction.End5a5d6c21" />
	</MachineInstruction>

	<MachineInstruction name="loadi" opcode="b" instructionFormat="op reg reg un5" assemblyFormat="op reg reg" instructionColors="#f7e2c8 #cdf3d3 #aac18f #d6cac9" assemblyColors="#f7e2c8 #cdf3d3 #aac18f" >
		<Microinstruction microRef="microinstruction.TransferAtoR15f2d58" />
		<Microinstruction microRef="microinstruction.TransferRtoR3acf9e17" />
		<Microinstruction microRef="microinstruction.Test17b1bb77" />
		<Microinstruction microRef="microinstruction.MemoryAccess4c5feac5" />
		<Microinstruction microRef="microinstruction.TransferRtoR35fd9de0" />
		<Microinstruction microRef="microinstruction.TransferRtoA7500520c" />
		<Microinstruction microRef="microinstruction.End5a5d6c21" />
		<Microinstruction microRef="microinstruction.IO64a7884a" />
		<Microinstruction microRef="microinstruction.TransferRtoA7500520c" />
		<Microinstruction microRef="microinstruction.End5a5d6c21" />
	</MachineInstruction>

	<MachineInstruction name="move" opcode="a" instructionFormat="op reg reg un5" assemblyFormat="op reg reg" instructionColors="#c7f785 #c0c1ca #c5f1af #84ca8c" assemblyColors="#c7f785 #c0c1ca #c5f1af" >
		<Microinstruction microRef="microinstruction.TransferAtoR15f2d58" />
		<Microinstruction microRef="microinstruction.TransferRtoA7500520c" />
		<Microinstruction microRef="microinstruction.End5a5d6c21" />
	</MachineInstruction>

	<MachineInstruction name="divide" opcode="6" instructionFormat="op reg reg un5" assemblyFormat="op reg reg" instructionColors="#d5c7e4 #8ec485 #b0dbe3 #9b9cbe" assemblyColors="#d5c7e4 #8ec485 #b0dbe3" >
		<Microinstruction microRef="microinstruction.TransferAtoR7321b74c" />
		<Microinstruction microRef="microinstruction.TransferAtoR76388f4d" />
		<Microinstruction microRef="microinstruction.Arithmetic29a37dda" />
		<Microinstruction microRef="microinstruction.TransferRtoA7500520c" />
		<Microinstruction microRef="microinstruction.End5a5d6c21" />
	</MachineInstruction>

	<MachineInstruction name="multiply" opcode="5" instructionFormat="op reg reg un5" assemblyFormat="op reg reg" instructionColors="#c7f4b8 #f8ebec #bca4a4 #b6b0a7" assemblyColors="#c7f4b8 #f8ebec #bca4a4" >
		<Microinstruction microRef="microinstruction.TransferAtoR7321b74c" />
		<Microinstruction microRef="microinstruction.TransferAtoR76388f4d" />
		<Microinstruction microRef="microinstruction.Arithmetic17b089f0" />
		<Microinstruction microRef="microinstruction.TransferRtoA7500520c" />
		<Microinstruction microRef="microinstruction.End5a5d6c21" />
	</MachineInstruction>

	<MachineInstruction name="subtract" opcode="4" instructionFormat="op reg reg un5" assemblyFormat="op reg reg" instructionColors="#9eaf90 #95ae9b #cce4fe #c0a2e1" assemblyColors="#9eaf90 #95ae9b #cce4fe" >
		<Microinstruction microRef="microinstruction.TransferAtoR7321b74c" />
		<Microinstruction microRef="microinstruction.TransferAtoR76388f4d" />
		<Microinstruction microRef="microinstruction.Arithmetic3ab9ce38" />
		<Microinstruction microRef="microinstruction.TransferRtoA7500520c" />
		<Microinstruction microRef="microinstruction.End5a5d6c21" />
	</MachineInstruction>

	<MachineInstruction name="exit" opcode="0" instructionFormat="op un11" assemblyFormat="op" instructionColors="#fa9686 #c9d7ee" assemblyColors="#fa9686" >
		<Microinstruction microRef="microinstruction.SetCondBit1c6a4372" />
		<Microinstruction microRef="microinstruction.End5a5d6c21" />
	</MachineInstruction>

	<MachineInstruction name="load" opcode="1" instructionFormat="op reg addr" assemblyFormat="op reg addr" instructionColors="#a0ad84 #e2c093 #adc0d1" assemblyColors="#a0ad84 #e2c093 #adc0d1" >
		<Microinstruction microRef="microinstruction.CpusimSet206664a7" />
		<Microinstruction microRef="microinstruction.TransferRtoR76559098" />
		<Microinstruction microRef="microinstruction.Test17b1bb77" />
		<Microinstruction microRef="microinstruction.MemoryAccess4c5feac5" />
		<Microinstruction microRef="microinstruction.TransferRtoR35fd9de0" />
		<Microinstruction microRef="microinstruction.TransferRtoA7500520c" />
		<Microinstruction microRef="microinstruction.End5a5d6c21" />
		<Microinstruction microRef="microinstruction.IO64a7884a" />
		<Microinstruction microRef="microinstruction.TransferRtoA7500520c" />
		<Microinstruction microRef="microinstruction.End5a5d6c21" />
	</MachineInstruction>

	<MachineInstruction name="store" opcode="2" instructionFormat="op reg addr" assemblyFormat="op reg addr" instructionColors="#c5ebc4 #c58dc2 #83b4e4" assemblyColors="#c5ebc4 #c58dc2 #83b4e4" >
		<Microinstruction microRef="microinstruction.CpusimSet206664a7" />
		<Microinstruction microRef="microinstruction.TransferRtoR76559098" />
		<Microinstruction microRef="microinstruction.TransferAtoR7321b74c" />
		<Microinstruction microRef="microinstruction.Test950d1dd" />
		<Microinstruction microRef="microinstruction.TransferRtoR3016b84e" />
		<Microinstruction microRef="microinstruction.MemoryAccess2e051ef" />
		<Microinstruction microRef="microinstruction.End5a5d6c21" />
		<Microinstruction microRef="microinstruction.IO56d72174" />
		<Microinstruction microRef="microinstruction.End5a5d6c21" />
	</MachineInstruction>

	<MachineInstruction name="add" opcode="3" instructionFormat="op reg reg un5" assemblyFormat="op reg reg" instructionColors="#a7d4b3 #9180cf #f0d3b4 #e8d990" assemblyColors="#a7d4b3 #9180cf #f0d3b4" >
		<Microinstruction microRef="microinstruction.TransferAtoR7321b74c" />
		<Microinstruction microRef="microinstruction.TransferAtoR76388f4d" />
		<Microinstruction microRef="microinstruction.Arithmeticd40e272" />
		<Microinstruction microRef="microinstruction.TransferRtoA7500520c" />
		<Microinstruction microRef="microinstruction.End5a5d6c21" />
	</MachineInstruction>

	<MachineInstruction name="jump" opcode="7" instructionFormat="op un3 addr" assemblyFormat="op addr" instructionColors="#83d3cd #95efbf #e4f8eb" assemblyColors="#83d3cd #e4f8eb" >
		<Microinstruction microRef="microinstruction.CpusimSet475b2484" />
		<Microinstruction microRef="microinstruction.TransferRtoR302c8763" />
		<Microinstruction microRef="microinstruction.End5a5d6c21" />
	</MachineInstruction>

	<MachineInstruction name="jmpz" opcode="8" instructionFormat="op reg addr" assemblyFormat="op reg addr" instructionColors="#dbcfdd #f4d5fb #a7cc82" assemblyColors="#dbcfdd #f4d5fb #a7cc82" >
		<Microinstruction microRef="microinstruction.TransferAtoR7321b74c" />
		<Microinstruction microRef="microinstruction.Test2d07c666" />
		<Microinstruction microRef="microinstruction.CpusimSet475b2484" />
		<Microinstruction microRef="microinstruction.TransferRtoR302c8763" />
		<Microinstruction microRef="microinstruction.End5a5d6c21" />
	</MachineInstruction>

	<MachineInstruction name="jmpn" opcode="9" instructionFormat="op reg addr" assemblyFormat="op reg addr" instructionColors="#acecf7 #f8aff6 #e5ce9e" assemblyColors="#acecf7 #f8aff6 #e5ce9e" >
		<Microinstruction microRef="microinstruction.TransferAtoR7321b74c" />
		<Microinstruction microRef="microinstruction.Test1a00dd66" />
		<Microinstruction microRef="microinstruction.CpusimSet475b2484" />
		<Microinstruction microRef="microinstruction.TransferRtoR302c8763" />
		<Microinstruction microRef="microinstruction.End5a5d6c21" />
	</MachineInstruction>

	<!--............. highlighting info .............-->
	<HighlightingInfo>
		<RegisterRAMPair register="module.Register3c940800" ram="module.RAM4d14f455" dynamic="false" />
	</HighlightingInfo>

	<!--............. loading info ..................-->
	<LoadingInfo ram="module.RAM4d14f455" startingAddress="0" />

	<!--............. indexing info ............-->
	<IndexingInfo indexFromRight="false" />

</Machine>
