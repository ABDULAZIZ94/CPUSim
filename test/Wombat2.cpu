<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE Machine [
<!ELEMENT Machine (PunctChar*, Field*, FileChannel*, Register*, RegisterArray*, ConditionBit*, RAM*, Set*, Test*, Increment*, Shift*, Logical*, Arithmetic*, Branch*, TransferRtoR*, TransferRtoA*, TransferAtoR*, Decode*, SetCondBit*, IO*, MemoryAccess*, End, Comment*, EQU*, FetchSequence, MachineInstruction*, HighlightingInfo?, LoadingInfo?, ModuleWindowsInfo?) >
<!ATTLIST Machine name CDATA "unnamed">
<!ELEMENT PunctChar EMPTY>
<!ATTLIST PunctChar char CDATA #REQUIRED use  (symbol|token|label|comment|pseudo|illegal) #REQUIRED>
<!ELEMENT Field (FieldValue*)>
<!ATTLIST Field name CDATA #REQUIRED type  (required|optional|ignored) #REQUIRED numBits CDATA #REQUIRED relativity (absolute|pcRelativePreIncr|pcRelativePostIncr) #REQUIRED defaultValue CDATA #REQUIRED signed (true|false) #REQUIRED offset CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT FieldValue EMPTY>
<!ATTLIST FieldValue name CDATA #REQUIRED value CDATA #REQUIRED>
<!ELEMENT FileChannel EMPTY>
<!ATTLIST FileChannel file CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Register EMPTY>
<!ATTLIST Register name CDATA #REQUIRED width CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT RegisterArray (Register+)>
<!ATTLIST RegisterArray name CDATA #REQUIRED width CDATA #REQUIRED length CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT ConditionBit EMPTY>
<!ATTLIST ConditionBit name CDATA #REQUIRED bit CDATA #REQUIRED register IDREF #REQUIRED halt (true|false) "false" id ID #REQUIRED>
<!ELEMENT RAM EMPTY>
<!ATTLIST RAM name CDATA #REQUIRED length CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Increment EMPTY>
<!ATTLIST Increment name CDATA #REQUIRED register IDREF #REQUIRED overflowBit IDREF #IMPLIED delta CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Arithmetic EMPTY>
<!ATTLIST Arithmetic name CDATA #REQUIRED type (ADD|SUBTRACT|MULTIPLY|DIVIDE) #REQUIRED source1 IDREF #REQUIRED source2 IDREF #REQUIRED destination IDREF #REQUIRED overflowBit IDREF #IMPLIED  carryBit IDREF #IMPLIED  id ID #REQUIRED>
<!ELEMENT TransferRtoR EMPTY>
<!ATTLIST TransferRtoR name CDATA #REQUIRED source IDREF #REQUIRED srcStartBit CDATA #REQUIRED dest IDREF #REQUIRED destStartBit CDATA #REQUIRED numBits CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT TransferRtoA EMPTY>
<!ATTLIST TransferRtoA name CDATA #REQUIRED source IDREF #REQUIRED srcStartBit CDATA #REQUIRED dest IDREF #REQUIRED destStartBit CDATA #REQUIRED numBits CDATA #REQUIRED index IDREF #REQUIRED indexStart CDATA #IMPLIED indexNumBits CDATA #IMPLIED id ID #REQUIRED>
<!ELEMENT TransferAtoR EMPTY>
<!ATTLIST TransferAtoR name CDATA #REQUIRED source IDREF #REQUIRED srcStartBit CDATA #REQUIRED dest IDREF #REQUIRED destStartBit CDATA #REQUIRED numBits CDATA #REQUIRED index IDREF #REQUIRED indexStart CDATA #IMPLIED indexNumBits CDATA #IMPLIED id ID #REQUIRED>
<!ELEMENT Shift EMPTY>
<!ATTLIST Shift name CDATA #REQUIRED source IDREF #REQUIRED destination IDREF #REQUIRED type (logical | arithmetic | cyclic) #REQUIRED direction (right | left) #REQUIRED distance CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Branch EMPTY>
<!ATTLIST Branch name CDATA #REQUIRED amount CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Logical EMPTY>
<!ATTLIST Logical name CDATA #REQUIRED source1 IDREF #REQUIRED source2 IDREF #REQUIRED destination IDREF #REQUIRED type (AND | OR | NAND | NOR | XOR | NOT) #REQUIRED id ID #REQUIRED>
<!ELEMENT Set EMPTY>
<!ATTLIST Set name CDATA #REQUIRED register IDREF #REQUIRED start CDATA #REQUIRED numBits CDATA #REQUIRED value CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Test EMPTY >
<!ATTLIST Test name CDATA #REQUIRED register IDREF #REQUIRED start CDATA #REQUIRED numBits CDATA #REQUIRED comparison (EQ | NE | LT | GT | LE | GE ) #REQUIRED value CDATA #REQUIRED omission CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Decode EMPTY >
<!ATTLIST Decode name CDATA #REQUIRED ir IDREF #REQUIRED id ID #REQUIRED>
<!ELEMENT IO EMPTY >
<!ATTLIST IO name CDATA #REQUIRED direction (input | output) #REQUIRED type (integer | ascii | unicode) #REQUIRED buffer IDREF #REQUIRED connection CDATA #IMPLIED id ID #REQUIRED>
<!ELEMENT MemoryAccess EMPTY >
<!ATTLIST MemoryAccess name CDATA #REQUIRED direction (read | write ) #REQUIRED memory IDREF #REQUIRED data IDREF #REQUIRED address IDREF #REQUIRED id ID #REQUIRED>
<!ELEMENT SetCondBit EMPTY >
<!ATTLIST SetCondBit name CDATA #REQUIRED bit IDREF #REQUIRED value (0 | 1) #REQUIRED id ID #REQUIRED>
<!ELEMENT End EMPTY>
<!ATTLIST End id ID #REQUIRED>
<!ELEMENT Comment EMPTY>
<!ATTLIST Comment name CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Microinstruction EMPTY>
<!ATTLIST Microinstruction microRef IDREF #REQUIRED>
<!ELEMENT MachineInstruction (Microinstruction*)>
<!ATTLIST MachineInstruction name CDATA #REQUIRED opcode CDATA #REQUIRED format CDATA #REQUIRED>
<!ELEMENT FetchSequence (Microinstruction*) >
<!ELEMENT EQU EMPTY>
<!ATTLIST EQU name CDATA #REQUIRED value CDATA #REQUIRED>
<!ELEMENT HighlightingInfo (RegisterRAMPair*)>
<!ELEMENT RegisterRAMPair EMPTY>
<!ATTLIST RegisterRAMPair register IDREF #REQUIRED ram IDREF #REQUIRED dynamic (true|false) #REQUIRED>
<!ELEMENT LoadingInfo EMPTY>
<!ATTLIST LoadingInfo ram IDREF #IMPLIED startingAddress CDATA "0">
<!ELEMENT ModuleWindowsInfo ((RegisterWindowInfo | RegisterArrayWindowInfo | RAMWindowInfo)*) >
<!ELEMENT RegisterWindowInfo EMPTY>
<!ATTLIST RegisterWindowInfo top CDATA "50" left CDATA "50" width CDATA "300" height CDATA "150" base (Decimal|Binary|Hexadecimal|Ascii|UnsignedDec|Unicode)  "Decimal">
<!ELEMENT RegisterArrayWindowInfo EMPTY>
<!ATTLIST RegisterArrayWindowInfo array IDREF #REQUIRED top CDATA "50" left CDATA "50" width CDATA "300" height CDATA "150" base (Decimal|Binary|Hexadecimal|Ascii|UnsignedDec|Unicode) "Decimal">
<!ELEMENT RAMWindowInfo EMPTY>
<!ATTLIST RAMWindowInfo ram IDREF #REQUIRED cellSize CDATA "1" top CDATA "50" left CDATA "50" width CDATA "450" height CDATA "450" contentsbase (Decimal|Binary|Hexadecimal|Ascii|UnsignedDec|Unicode) "Decimal" addressbase (Decimal|Binary|Hexadecimal) "Decimal">
]>

<Machine name="Wombat2.cpu" >
	<!--............. Punctuation Options .............-->
	<PunctChar char="!" use="symbol" />
	<PunctChar char="#" use="symbol" />
	<PunctChar char="$" use="symbol" />
	<PunctChar char="%" use="symbol" />
	<PunctChar char="&amp;" use="symbol" />
	<PunctChar char="^" use="symbol" />
	<PunctChar char="_" use="symbol" />
	<PunctChar char="`" use="symbol" />
	<PunctChar char="*" use="symbol" />
	<PunctChar char="?" use="symbol" />
	<PunctChar char="@" use="symbol" />
	<PunctChar char="~" use="symbol" />
	<PunctChar char="+" use="symbol" />
	<PunctChar char="-" use="symbol" />
	<PunctChar char="(" use="token" />
	<PunctChar char=")" use="token" />
	<PunctChar char="," use="token" />
	<PunctChar char="/" use="token" />
	<PunctChar char="=" use="token" />
	<PunctChar char="[" use="token" />
	<PunctChar char="\" use="token" />
	<PunctChar char="]" use="token" />
	<PunctChar char="{" use="token" />
	<PunctChar char="|" use="token" />
	<PunctChar char="}" use="token" />
	<PunctChar char="." use="pseudo" />
	<PunctChar char=":" use="label" />
	<PunctChar char=";" use="comment" />

	<!--......... machine instruction fields ............-->
	<Field name="sgn5" type="required" numBits="8" relativity="absolute" signed="true" offset="0" defaultValue="0" id="Field43179c1c">
	</Field>
	<Field name="reg" type="required" numBits="3" relativity="absolute" signed="false" offset="0" defaultValue="0" id="Field430a14ad">
	</Field>
	<Field name="un3" type="ignored" numBits="3" relativity="absolute" signed="true" offset="0" defaultValue="0" id="Field4ad38c3d">
	</Field>
	<Field name="op" type="required" numBits="5" relativity="absolute" signed="false" offset="0" defaultValue="0" id="Field69c1f2c">
	</Field>
	<Field name="un5" type="ignored" numBits="5" relativity="absolute" signed="true" offset="0" defaultValue="0" id="Field73c28517">
	</Field>
	<Field name="addr" type="required" numBits="8" relativity="absolute" signed="false" offset="0" defaultValue="0" id="Field67afe460">
	</Field>
	<Field name="un8" type="ignored" numBits="8" relativity="absolute" signed="true" offset="0" defaultValue="0" id="Field4cba8fce">
	</Field>
	<Field name="un11" type="ignored" numBits="11" relativity="absolute" signed="true" offset="0" defaultValue="0" id="Field6c3744bc">
	</Field>

	<!--............. FileChannels .................-->
	<!-- none -->

	<!--............. registers .....................-->
	<Register name="buffer1" width="16" id="module.Register181b7c76" />
	<Register name="buffer2" width="16" id="module.Register34883357" />
	<Register name="ir" width="16" id="module.Register59e2afb2" />
	<Register name="mar" width="12" id="module.Register317cfd38" />
	<Register name="mdr" width="16" id="module.Register4d480ea" />
	<Register name="pc" width="12" id="module.Register1b5b8520" />
	<Register name="status" width="3" id="module.Register158105e8" />

	<!--............. register arrays ...............-->
	<RegisterArray name="A" length="8" width="16" id="module.RegisterArray49aacd5f" >
		<Register name="A[0]" width="16" id="module.Register6c913dc1" />
		<Register name="A[1]" width="16" id="module.Register336d8196" />
		<Register name="A[2]" width="16" id="module.Register5a56b93a" />
		<Register name="A[3]" width="16" id="module.Register739abd2b" />
		<Register name="A[4]" width="16" id="module.Register33f98d58" />
		<Register name="A[5]" width="16" id="module.Register44aea710" />
		<Register name="A[6]" width="16" id="module.Register265a2eaa" />
		<Register name="A[7]" width="16" id="module.Register6aadae91" />
	</RegisterArray>

	<!--............. condition bits ................-->
	<ConditionBit name="halt" bit="0" register="module.Register158105e8" halt="true" id="module.ConditionBit309fe84e" />

	<!--............. rams ..........................-->
	<RAM name="Main" length="256" id="module.RAM18c4bc34" />

	<!--............. set ...........................-->
	<Set name="clear-buf1" register="module.Register181b7c76" start="0" numBits="16" value="0" id="microinstruction.CpusimSet4fc4a198" />
	<Set name="clear-mar" register="module.Register317cfd38" start="0" numBits="12" value="0" id="microinstruction.CpusimSet49198ff2" />
	<Set name="clear-pc" register="module.Register1b5b8520" start="0" numBits="12" value="0" id="microinstruction.CpusimSet2d397e5c" />

	<!--............. test ..........................-->
	<Test name="if(buf1!=0)skip-2" register="module.Register181b7c76" start="0" numBits="16" comparison="NE" value="0" omission="2" id="microinstruction.Test9bad5a" />
	<Test name="if(buf1&gt;=0)skip-2" register="module.Register181b7c76" start="0" numBits="16" comparison="GE" value="0" omission="2" id="microinstruction.Test6c91f005" />
	<Test name="if(mar=IO)skip3" register="module.Register317cfd38" start="0" numBits="12" comparison="EQ" value="254" omission="3" id="microinstruction.Test61250ff2" />
	<Test name="if(mar=IO)skip4" register="module.Register317cfd38" start="0" numBits="12" comparison="EQ" value="254" omission="4" id="microinstruction.Test483a0ab1" />

	<!--............. increment .....................-->
	<Increment name="Inc2-pc" register="module.Register1b5b8520" overflowBit="module.ConditionBit309fe84e" delta="2" id="microinstruction.Increment5a940f82" />

	<!--............. shift .........................-->
	<Shift name="rsa8buf1" type="arithmetic" source="module.Register181b7c76" destination="module.Register181b7c76" direction="right" distance="8" id="microinstruction.Shift737c2891" />

	<!--............. logical .......................-->
	<!-- none -->

	<!--............. arithmetic ....................-->
	<Arithmetic name="buf1*buf2-&gt;buf1" type="MULTIPLY" source1="module.Register181b7c76" source2="module.Register34883357" destination="module.Register181b7c76" overflowBit="module.ConditionBit309fe84e" id="microinstruction.Arithmetic5c4b82d2" />
	<Arithmetic name="buf1+buf2-&gt;buf1" type="ADD" source1="module.Register181b7c76" source2="module.Register34883357" destination="module.Register181b7c76" overflowBit="module.ConditionBit309fe84e" id="microinstruction.Arithmetic6179d854" />
	<Arithmetic name="buf1-buf2-&gt;buf1" type="SUBTRACT" source1="module.Register181b7c76" source2="module.Register34883357" destination="module.Register181b7c76" overflowBit="module.ConditionBit309fe84e" id="microinstruction.Arithmetic669a4cb" />
	<Arithmetic name="buf1/buf2-&gt;buf1" type="DIVIDE" source1="module.Register181b7c76" source2="module.Register34883357" destination="module.Register181b7c76" overflowBit="module.ConditionBit309fe84e" id="microinstruction.Arithmetic1c20eb7" />

	<!--............. branch ........................-->
	<!-- none -->

	<!--............. transferRtoR ..................-->
	<TransferRtoR name="buffer1-&gt;mar" source="module.Register181b7c76" srcStartBit="4" dest="module.Register317cfd38" destStartBit="0" numBits="12" id="microinstruction.TransferRtoR5c3a835d" />
	<TransferRtoR name="buffer1-&gt;mdr" source="module.Register181b7c76" srcStartBit="0" dest="module.Register4d480ea" destStartBit="0" numBits="16" id="microinstruction.TransferRtoR5867df9" />
	<TransferRtoR name="ir(8-15)-&gt;buf1(0-7)" source="module.Register59e2afb2" srcStartBit="8" dest="module.Register181b7c76" destStartBit="0" numBits="8" id="microinstruction.TransferRtoR40b86944" />
	<TransferRtoR name="ir(8-15)-&gt;mar" source="module.Register59e2afb2" srcStartBit="8" dest="module.Register317cfd38" destStartBit="4" numBits="8" id="microinstruction.TransferRtoRb07108e" />
	<TransferRtoR name="ir(8-15)-&gt;pc" source="module.Register59e2afb2" srcStartBit="8" dest="module.Register1b5b8520" destStartBit="4" numBits="8" id="microinstruction.TransferRtoR7ccfe049" />
	<TransferRtoR name="mdr-&gt;buffer1" source="module.Register4d480ea" srcStartBit="0" dest="module.Register181b7c76" destStartBit="0" numBits="16" id="microinstruction.TransferRtoR338e18a3" />
	<TransferRtoR name="mdr-&gt;ir" source="module.Register4d480ea" srcStartBit="0" dest="module.Register59e2afb2" destStartBit="0" numBits="16" id="microinstruction.TransferRtoRf79f36b" />
	<TransferRtoR name="pc-&gt;mar" source="module.Register1b5b8520" srcStartBit="0" dest="module.Register317cfd38" destStartBit="0" numBits="12" id="microinstruction.TransferRtoRf5bfdbd" />

	<!--............. transferRtoA ..................-->
	<TransferRtoA name="buf1-&gt;A[ir(5-7)]" source="module.Register181b7c76" srcStartBit="0" dest="module.RegisterArray49aacd5f" destStartBit="0" numBits="16" index="module.Register59e2afb2" indexStart="5" indexNumBits="3" id="microinstruction.TransferRtoA3b19e583" />
	<TransferRtoA name="buf1-&gt;A[ir(8-10)]" source="module.Register181b7c76" srcStartBit="0" dest="module.RegisterArray49aacd5f" destStartBit="0" numBits="16" index="module.Register59e2afb2" indexStart="8" indexNumBits="3" id="microinstruction.TransferRtoA212b19c5" />

	<!--............. transferAtoR ..................-->
	<TransferAtoR name="A[ir(5-7)]-&gt;buf1" source="module.RegisterArray49aacd5f" srcStartBit="0" dest="module.Register181b7c76" destStartBit="0" numBits="16" index="module.Register59e2afb2" indexStart="5" indexNumBits="3" id="microinstruction.TransferAtoR5c74cb02" />
	<TransferAtoR name="A[ir(8-10)]-&gt;buf1" source="module.RegisterArray49aacd5f" srcStartBit="0" dest="module.Register181b7c76" destStartBit="0" numBits="16" index="module.Register59e2afb2" indexStart="8" indexNumBits="3" id="microinstruction.TransferAtoR77bc1fb9" />
	<TransferAtoR name="A[ir(8-10)]-&gt;buf2" source="module.RegisterArray49aacd5f" srcStartBit="0" dest="module.Register34883357" destStartBit="0" numBits="16" index="module.Register59e2afb2" indexStart="8" indexNumBits="3" id="microinstruction.TransferAtoR5fc6e818" />

	<!--............. decode ........................-->
	<Decode name="Decode-ir" ir="module.Register59e2afb2" id="microinstruction.Decode4b7f1841" />

	<!--............. set condition bit .............-->
	<SetCondBit name="set-halt-bit" bit="module.ConditionBit309fe84e" value="1" id="microinstruction.SetCondBit5117a20" />

	<!--............. io ............................-->
	<IO name="input-int-&gt;buf1" direction="input" type="integer" buffer="module.Register181b7c76" connection="[console]" id="microinstruction.IO5289e2f1" />
	<IO name="output-buf1-&gt;int" direction="output" type="integer" buffer="module.Register181b7c76" connection="[console]" id="microinstruction.IO5a92668c" />

	<!--............. memory access .................-->
	<MemoryAccess name="Main[mar]-&gt;mdr" direction="read" memory="module.RAM18c4bc34" data="module.Register4d480ea" address="module.Register317cfd38" id="microinstruction.MemoryAccess74002515" />
	<MemoryAccess name="mdr-&gt;Main[mar]" direction="write" memory="module.RAM18c4bc34" data="module.Register4d480ea" address="module.Register317cfd38" id="microinstruction.MemoryAccess3582c132" />

	<!--............. end ...........................-->
	<End id="microinstruction.End1b59d510" />

	<!--............. comment ...........................-->
	<Comment name=";set A[ir(5-7)] to 0" id="microinstruction.Comment4c9d22fc" />

	<!--............. global equs ..................-->
	<EQU name="IO" value="254" />
	<EQU name="A7" value="7" />
	<EQU name="A6" value="6" />
	<EQU name="A5" value="5" />
	<EQU name="A4" value="4" />
	<EQU name="A3" value="3" />
	<EQU name="A2" value="2" />
	<EQU name="A1" value="1" />
	<EQU name="A0" value="0" />

	<!--............. fetch sequence ................-->
	<FetchSequence>
		<Microinstruction microRef="microinstruction.TransferRtoRf5bfdbd" />
		<Microinstruction microRef="microinstruction.MemoryAccess74002515" />
		<Microinstruction microRef="microinstruction.TransferRtoRf79f36b" />
		<Microinstruction microRef="microinstruction.Increment5a940f82" />
		<Microinstruction microRef="microinstruction.Decode4b7f1841" />
	</FetchSequence>

	<!--............. machine instructions ..........-->

	<MachineInstruction name="clear" opcode="e" format="op reg un8" >
		<Microinstruction microRef="microinstruction.CpusimSet4fc4a198" />
		<Microinstruction microRef="microinstruction.TransferRtoA3b19e583" />
		<Microinstruction microRef="microinstruction.End1b59d510" />
	</MachineInstruction>

	<MachineInstruction name="loadc" opcode="d" format="op reg sgn5" >
		<Microinstruction microRef="microinstruction.TransferRtoR40b86944" />
		<Microinstruction microRef="microinstruction.Shift737c2891" />
		<Microinstruction microRef="microinstruction.TransferRtoA3b19e583" />
		<Microinstruction microRef="microinstruction.End1b59d510" />
	</MachineInstruction>

	<MachineInstruction name="storei" opcode="c" format="op reg reg un5" >
		<Microinstruction microRef="microinstruction.TransferAtoR77bc1fb9" />
		<Microinstruction microRef="microinstruction.TransferRtoR5c3a835d" />
		<Microinstruction microRef="microinstruction.TransferAtoR5c74cb02" />
		<Microinstruction microRef="microinstruction.Test61250ff2" />
		<Microinstruction microRef="microinstruction.TransferRtoR5867df9" />
		<Microinstruction microRef="microinstruction.MemoryAccess3582c132" />
		<Microinstruction microRef="microinstruction.End1b59d510" />
		<Microinstruction microRef="microinstruction.IO5a92668c" />
		<Microinstruction microRef="microinstruction.End1b59d510" />
	</MachineInstruction>

	<MachineInstruction name="loadi" opcode="b" format="op reg reg un5" >
		<Microinstruction microRef="microinstruction.TransferAtoR77bc1fb9" />
		<Microinstruction microRef="microinstruction.TransferRtoR5c3a835d" />
		<Microinstruction microRef="microinstruction.Test483a0ab1" />
		<Microinstruction microRef="microinstruction.MemoryAccess74002515" />
		<Microinstruction microRef="microinstruction.TransferRtoR338e18a3" />
		<Microinstruction microRef="microinstruction.TransferRtoA3b19e583" />
		<Microinstruction microRef="microinstruction.End1b59d510" />
		<Microinstruction microRef="microinstruction.IO5289e2f1" />
		<Microinstruction microRef="microinstruction.TransferRtoA3b19e583" />
		<Microinstruction microRef="microinstruction.End1b59d510" />
	</MachineInstruction>

	<MachineInstruction name="move" opcode="a" format="op reg reg un5" >
		<Microinstruction microRef="microinstruction.TransferAtoR77bc1fb9" />
		<Microinstruction microRef="microinstruction.TransferRtoA3b19e583" />
		<Microinstruction microRef="microinstruction.End1b59d510" />
	</MachineInstruction>

	<MachineInstruction name="divide" opcode="6" format="op reg reg un5" >
		<Microinstruction microRef="microinstruction.TransferAtoR5c74cb02" />
		<Microinstruction microRef="microinstruction.TransferAtoR5fc6e818" />
		<Microinstruction microRef="microinstruction.Arithmetic1c20eb7" />
		<Microinstruction microRef="microinstruction.TransferRtoA3b19e583" />
		<Microinstruction microRef="microinstruction.End1b59d510" />
	</MachineInstruction>

	<MachineInstruction name="multiply" opcode="5" format="op reg reg un5" >
		<Microinstruction microRef="microinstruction.TransferAtoR5c74cb02" />
		<Microinstruction microRef="microinstruction.TransferAtoR5fc6e818" />
		<Microinstruction microRef="microinstruction.Arithmetic5c4b82d2" />
		<Microinstruction microRef="microinstruction.TransferRtoA3b19e583" />
		<Microinstruction microRef="microinstruction.End1b59d510" />
	</MachineInstruction>

	<MachineInstruction name="subtract" opcode="4" format="op reg reg un5" >
		<Microinstruction microRef="microinstruction.TransferAtoR5c74cb02" />
		<Microinstruction microRef="microinstruction.TransferAtoR5fc6e818" />
		<Microinstruction microRef="microinstruction.Arithmetic669a4cb" />
		<Microinstruction microRef="microinstruction.TransferRtoA3b19e583" />
		<Microinstruction microRef="microinstruction.End1b59d510" />
	</MachineInstruction>

	<MachineInstruction name="exit" opcode="0" format="op un11" >
		<Microinstruction microRef="microinstruction.SetCondBit5117a20" />
		<Microinstruction microRef="microinstruction.End1b59d510" />
	</MachineInstruction>

	<MachineInstruction name="load" opcode="1" format="op reg addr" >
		<Microinstruction microRef="microinstruction.CpusimSet49198ff2" />
		<Microinstruction microRef="microinstruction.TransferRtoRb07108e" />
		<Microinstruction microRef="microinstruction.Test483a0ab1" />
		<Microinstruction microRef="microinstruction.MemoryAccess74002515" />
		<Microinstruction microRef="microinstruction.TransferRtoR338e18a3" />
		<Microinstruction microRef="microinstruction.TransferRtoA3b19e583" />
		<Microinstruction microRef="microinstruction.End1b59d510" />
		<Microinstruction microRef="microinstruction.IO5289e2f1" />
		<Microinstruction microRef="microinstruction.TransferRtoA3b19e583" />
		<Microinstruction microRef="microinstruction.End1b59d510" />
	</MachineInstruction>

	<MachineInstruction name="store" opcode="2" format="op reg addr" >
		<Microinstruction microRef="microinstruction.CpusimSet49198ff2" />
		<Microinstruction microRef="microinstruction.TransferRtoRb07108e" />
		<Microinstruction microRef="microinstruction.TransferAtoR5c74cb02" />
		<Microinstruction microRef="microinstruction.Test61250ff2" />
		<Microinstruction microRef="microinstruction.TransferRtoR5867df9" />
		<Microinstruction microRef="microinstruction.MemoryAccess3582c132" />
		<Microinstruction microRef="microinstruction.End1b59d510" />
		<Microinstruction microRef="microinstruction.IO5a92668c" />
		<Microinstruction microRef="microinstruction.End1b59d510" />
	</MachineInstruction>

	<MachineInstruction name="add" opcode="3" format="op reg reg un5" >
		<Microinstruction microRef="microinstruction.TransferAtoR5c74cb02" />
		<Microinstruction microRef="microinstruction.TransferAtoR5fc6e818" />
		<Microinstruction microRef="microinstruction.Arithmetic6179d854" />
		<Microinstruction microRef="microinstruction.TransferRtoA3b19e583" />
		<Microinstruction microRef="microinstruction.End1b59d510" />
	</MachineInstruction>

	<MachineInstruction name="jump" opcode="7" format="op un3 addr" >
		<Microinstruction microRef="microinstruction.CpusimSet2d397e5c" />
		<Microinstruction microRef="microinstruction.TransferRtoR7ccfe049" />
		<Microinstruction microRef="microinstruction.End1b59d510" />
	</MachineInstruction>

	<MachineInstruction name="jmpz" opcode="8" format="op reg addr" >
		<Microinstruction microRef="microinstruction.TransferAtoR5c74cb02" />
		<Microinstruction microRef="microinstruction.Test9bad5a" />
		<Microinstruction microRef="microinstruction.CpusimSet2d397e5c" />
		<Microinstruction microRef="microinstruction.TransferRtoR7ccfe049" />
		<Microinstruction microRef="microinstruction.End1b59d510" />
	</MachineInstruction>

	<MachineInstruction name="jmpn" opcode="9" format="op reg addr" >
		<Microinstruction microRef="microinstruction.TransferAtoR5c74cb02" />
		<Microinstruction microRef="microinstruction.Test6c91f005" />
		<Microinstruction microRef="microinstruction.CpusimSet2d397e5c" />
		<Microinstruction microRef="microinstruction.TransferRtoR7ccfe049" />
		<Microinstruction microRef="microinstruction.End1b59d510" />
	</MachineInstruction>

	<!--............. highlighting info .............-->
	<HighlightingInfo>
		<RegisterRAMPair register="module.Register1b5b8520" ram="module.RAM18c4bc34" dynamic="false" />
	</HighlightingInfo>

	<!--............. loading info ..................-->
	<LoadingInfo ram="module.RAM18c4bc34" startingAddress="0" />

	<!--............. module window info ............-->
	<ModuleWindowsInfo>
		<RegisterArrayWindowInfo array="module.RegisterArray49aacd5f" base="Decimal" 
			top="653" left="847" width="282" height="233" />
		<RegisterWindowInfo base="Decimal" 
			top="900" left="873" width="286" height="226" />
		<RAMWindowInfo ram="module.RAM18c4bc34" cellSize="2" contentsbase="Decimal" addressbase="Decimal" 
			top="9" left="479" width="529" height="649" />
	</ModuleWindowsInfo>

</Machine>
